Index: toolchain/uClibc/config-0.9.30.1/armv6k
===================================================================
--- a/toolchain/uClibc/config-0.9.30.1/armv6k	(revision 0)
+++ b/toolchain/uClibc/config-0.9.30.1/armv6k	(revision 0)
@@ -0,0 +1,25 @@
+ARCH_ANY_ENDIAN=y
+ARCH_LITTLE_ENDIAN=y
+ARCH_WANTS_LITTLE_ENDIAN=y
+# CONFIG_ARM10T is not set
+# CONFIG_ARM1136JF_S is not set
+CONFIG_ARM1176JZF_S=y
+# CONFIG_ARM1176JZ_S is not set
+# CONFIG_ARM610 is not set
+# CONFIG_ARM710 is not set
+# CONFIG_ARM720T is not set
+# CONFIG_ARM7TDMI is not set
+# CONFIG_ARM920T is not set
+# CONFIG_ARM922T is not set
+# CONFIG_ARM926T is not set
+# CONFIG_ARM_CORTEX_M1 is not set
+# CONFIG_ARM_CORTEX_M3 is not set
+# CONFIG_ARM_EABI is not set
+# CONFIG_ARM_IWMMXT is not set
+CONFIG_ARM_OABI=y
+# CONFIG_ARM_SA110 is not set
+# CONFIG_ARM_SA1100 is not set
+# CONFIG_ARM_XSCALE is not set
+# CONFIG_GENERIC_ARM is not set
+TARGET_ARCH="arm"
+TARGET_arm=y
Index: toolchain/Config.in
===================================================================
--- a/toolchain/Config.in	(revision 22162)
+++ b/toolchain/Config.in	(working copy)
@@ -19,6 +19,7 @@
 		prompt "Target name"  if DEVEL
 		depends EXTERNAL_TOOLCHAIN && !NATIVE_TOOLCHAIN
 		default "arm-unknown-linux-gnu"      if arm
+		default "armv6k-unknown-linux-gnu"    if armv6k
 		default "armeb-unknown-linux-gnu"    if armeb
 		default "i486-unknown-linux-gnu"     if i386
 		default "mips-unknown-linux-gnu"     if mips
@@ -31,6 +32,7 @@
 		prompt "Toolchain prefix"  if DEVEL
 		depends EXTERNAL_TOOLCHAIN && !NATIVE_TOOLCHAIN
 		default "arm-unknown-linux-gnu-"      if arm
+		default "armv6k-unknown-linux-gnu-"    if armv6k
 		default "armeb-unknown-linux-gnu-"    if armeb
 		default "i486-unknown-linux-gnu-"     if i386
 		default "mips-unknown-linux-gnu-"     if mips
@@ -43,6 +45,7 @@
 		prompt "Toolchain root"  if DEVEL
 		depends EXTERNAL_TOOLCHAIN && !NATIVE_TOOLCHAIN
 		default "/opt/cross/arm-unknown-linux-gnu"      if arm
+		default "/opt/cross/armv6k-unknown-linux-gnu"    if armv6k
 		default "/opt/cross/armeb-unknown-linux-gnu"    if armeb
 		default "/opt/cross/i486-unknown-linux-gnu"     if i386
 		default "/opt/cross/mips-unknown-linux-gnu"     if mips
@@ -88,7 +91,7 @@
 
 config EABI_SUPPORT
 	bool
-	depends arm||armeb
+	depends arm||armeb||armv6k
 	prompt "Enable EABI support" if TOOLCHAINOPTS
 	default n if TARGET_gemini
 	default y
Index: toolchain/gcc/Config.version
===================================================================
--- a/toolchain/gcc/Config.version	(revision 22162)
+++ b/toolchain/gcc/Config.version	(working copy)
@@ -74,7 +74,7 @@
 
 	config GCC_VERSION_4_3_3_CS
 		default y if (mips || mipsel) && !(TARGET_octeon || TARGET_sibyte)
-		default y if (arm || armeb) && !TARGET_gemini
+		default y if (arm || armeb || armv6k) && !TARGET_gemini
 
 	config GCC_VERSION_4_4_1
 		default y if ubicom32
Index: toolchain/gcc/Config.in
===================================================================
--- a/toolchain/gcc/Config.in	(revision 22162)
+++ b/toolchain/gcc/Config.in	(working copy)
@@ -10,7 +10,7 @@
 	default GCC_VERSION_4_3_4 if TARGET_gemini
 	default GCC_VERSION_4_4_1 if ubicom32
 	default GCC_VERSION_4_3_3_CS if (mips || mipsel) && !(TARGET_octeon || TARGET_sibyte)
-	default GCC_VERSION_4_3_3_CS if (arm || armeb) && !TARGET_gemini
+	default GCC_VERSION_4_3_3_CS if (arm || armeb || armv6k) && !TARGET_gemini
 	default GCC_VERSION_4_4_3 if powerpc
 	default GCC_VERSION_4_4_3 if (TARGET_octeon || TARGET_sibyte)
 	default GCC_VERSION_4_1_2
Index: include/kernel.mk
===================================================================
--- a/include/kernel.mk	(revision 22162)
+++ b/include/kernel.mk	(working copy)
@@ -57,7 +57,7 @@
   LINUX_KARCH=um
 else
   ifeq (,$(LINUX_KARCH))
-    LINUX_KARCH=$(strip $(subst i386,x86,$(subst armeb,arm,$(subst mipsel,mips,$(subst mips64,mips,$(subst mips64el,mips,$(subst sh2,sh,$(subst sh3,sh,$(subst sh4,sh,$(ARCH))))))))))
+    LINUX_KARCH=$(strip $(subst i386,x86,$(subst armeb,arm,$(subst mipsel,mips,$(subst mips64,mips,$(subst mips64el,mips,$(subst sh2,sh,$(subst sh3,sh,$(subst sh4,sh,$(subst armv6k,arm,$(ARCH)))))))))))
   endif
 endif
 
Index: include/target.mk
===================================================================
--- a/include/target.mk	(revision 22162)
+++ b/include/target.mk	(working copy)
@@ -169,6 +169,7 @@
   DEFAULT_CFLAGS_mipsel=$(DEFAULT_CFLAGS_mips)
   DEFAULT_CFLAGS_mips64=-Os -pipe -mips64 -mtune=mips64 -mabi=64 -funit-at-a-time
   DEFAULT_CFLAGS_mips64el=$(DEFAULT_CFLAGS_mips64)
+	DEFAULT_CFLAGS_armv6k=-Os -pipe -march=armv6k -mtune=mpcore -mfloat-abi=softfp -mfpu=vfp -funit-at-a-time
   DEFAULT_CFLAGS_arm=-Os -pipe -march=armv5te -mtune=xscale -funit-at-a-time
   DEFAULT_CFLAGS_armeb=$(DEFAULT_CFLAGS_arm)
   DEFAULT_CFLAGS=$(if $(DEFAULT_CFLAGS_$(ARCH)),$(DEFAULT_CFLAGS_$(ARCH)),-Os -pipe -funit-at-a-time)
Index: scripts/config.sub
===================================================================
--- a/scripts/config.sub	(revision 22162)
+++ b/scripts/config.sub	(working copy)
@@ -241,7 +241,7 @@
 	| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \
 	| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \
 	| am33_2.0 \
-	| arc | arm | arm[bl]e | arme[lb] | armv[2345] | armv[345][lb] | avr | avr32 \
+	| arc | arm | arm[bl]e | arme[lb] | armv[23456] | armv[3456][lbk] | avr | avr32 \
 	| bfin \
 	| c4x | clipper \
 	| d10v | d30v | dlx | dsp16xx \
Index: package/madwifi/Makefile
===================================================================
--- a/package/madwifi/Makefile	(revision 22162)
+++ b/package/madwifi/Makefile	(working copy)
@@ -85,6 +85,9 @@
 ifeq ($(BOARD),orion)
   HAL_TARGET:=xscale-le-elf$(if $(CONFIG_EABI_SUPPORT),gnueabi)
 endif
+ifeq ($(BOARD),cns3xxx)
+  HAL_TARGET:=arm11-le-elf$(if $(CONFIG_EABI_SUPPORT),gnueabi)
+endif
 ifeq ($(ARCH),powerpc)
   HAL_TARGET:=powerpc-be-elf
 endif
Index: Config.in
===================================================================
--- a/Config.in	(revision 22162)
+++ b/Config.in	(working copy)
@@ -326,7 +326,7 @@
 	config SOFT_FLOAT
 		bool "Use software floating point by default" if TARGET_OPTIONS
 		default y
-		depends on (arm || armeb || powerpc || mipsel || mips) && !HAS_FPU
+		depends on (arm || armeb || armv6k || powerpc || mipsel || mips) && !HAS_FPU
 		help
 		  If your target CPU does not have a Floating Point Unit (FPU) or a
 		  kernel FPU emulator, but you still wish to support floating point
